#Week 2 MCQ's#
Q.1.
#include <stdio.h>
int main ()
{
  int a = 1, b = 2, c = 3;
  int *ptr1 = &a;
  int **sptr = &ptr1;
  printf ("%d %d\t\t", *ptr1, **sptr);
  //-Ref
  printf ("%d %d\n", *ptr1, **sptr);
}

a) *sptr = &c;
b) **sptr = &c;
c) *ptr1 = &c;
d) None of the mentioned. 

Explanation : 
sptr is a pointer to a pointer to an integer. Hence we use 
*sptr to assign address of c 
(It means that assign c address to that variable to whom sptr points to i.e. ptr1).

Q.2.
#include <stdio.h>
void main ()
{
  int a[2][3] = {1, 2, 3, , 4, 5};
  int i = 0, j = 0;
  for (i = 0; i < 2; i++)
  for (j = 0; j < 3; j++)
  printf ("%d", a[i][j]);
}

a) 1 2 3 junk 4 5
b) Compile time errorrror
c) 1 2 3 0 4 5
d) 1 2 3 3 4 5

Explanation : 
An array element is required before a comma.

Q.3.
Which of the following cannot be a structure member?
a) Another structure
b) Function
c) Array
d) None of the mentioned

Explanation : 
You cannot define a function within a structure 
in C, but you can define a function pointer though.

Q.4.
What is the output of this C code?
#include <stdio.h>
struct student
{
  int no;
  char name[20];
  }
  void main ()
  {
  struct student s;
  s.no = 8;
  printf ("hello");
}

a) Compile time error
b) Nothing
c) hello
d) Varies

Explanation : 
A semicolon (;) needed after structure defination ends.

Q.5.
    5. What is the output of this C code?
#include<stdio.h>
#include<conio.h>
int main (void)
{
  char ch[5];
  int i;
  for (i = 0; i < 5; i++)
    *(ch + i) = 67;
  *(ch + i) = '\0';
  printf("\n %s ", ch);
  getch ();
  return 0;
}

a) junk value
b) AAAAA
c) CCCCC
d) Compile time error

Explanation : 
67 is the ASCII value of character 'C' and 
it get printed 5 times because for every iteration 
the pointer increments by 1 and character ‘C’ gets 
stored in that position. At last the end of string 
character '\0' gets stored.

